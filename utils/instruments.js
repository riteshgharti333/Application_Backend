export const instrumentKeys = [
  "NSE_FO|56999",
  "NSE_FO|56961",
  "NSE_FO|57137",
  "NSE_FO|57136",
  "NSE_FO|57135",
  "NSE_FO|57151",
  "NSE_FO|57150",
  "NSE_FO|57155",
  "NSE_FO|57154",
  "NSE_FO|57153",
  "NSE_FO|57152",
  "NSE_FO|57157",
  "NSE_FO|57156",
  "NSE_FO|57149",
  "NSE_FO|57140",
  "NSE_FO|57144",
  "NSE_FO|57143",
  "NSE_FO|57142",
  "NSE_FO|57141",
  "NSE_FO|57148",
  "NSE_FO|57147",
  "NSE_FO|57146",
  "NSE_FO|57145",
  "NSE_FO|57139",
  "NSE_FO|57138",
  "NSE_FO|57173",
  "NSE_FO|57172",
  "NSE_FO|57171",
  "NSE_FO|57170",
  "NSE_FO|57177",
  "NSE_FO|57176",
  "NSE_FO|57175",
  "NSE_FO|57174",
  "NSE_FO|57179",
  "NSE_FO|57178",
  "NSE_FO|57162",
  "NSE_FO|57161",
  "NSE_FO|57160",
  "NSE_FO|57166",
  "NSE_FO|57165",
  "NSE_FO|57164",
  "NSE_FO|57163",
  "NSE_FO|57169",
  "NSE_FO|57168",
  "NSE_FO|57167",
  "NSE_FO|57191",
  "NSE_FO|57190",
  "NSE_FO|57195",
  "NSE_FO|57194",
  "NSE_FO|57193",
  "NSE_FO|57192",
  "NSE_FO|57199",
  "NSE_FO|57198",
  "NSE_FO|57197",
  "NSE_FO|57196",
  "NSE_FO|57180",
  "NSE_FO|57184",
  "NSE_FO|57183",
  "NSE_FO|57182",
  "NSE_FO|57181",
  "NSE_FO|57188",
  "NSE_FO|57187",
  "NSE_FO|57186",
  "NSE_FO|57185",
  "NSE_FO|57189",
  "NSE_FO|57090",
  "NSE_FO|57533",
  "NSE_FO|57532",
  "NSE_FO|57531",
  "NSE_FO|57530",
  "NSE_FO|57526",
  "NSE_FO|57525",
  "NSE_FO|57524",
  "NSE_FO|57523",
  "NSE_FO|57527",
  "NSE_FO|57522",
  "NSE_FO|57521",
  "NSE_FO|57520",
  "NSE_FO|57515",
  "NSE_FO|57514",
  "NSE_FO|57513",
  "NSE_FO|57512",
  "NSE_FO|57519",
  "NSE_FO|57518",
  "NSE_FO|57517",
  "NSE_FO|57516",
  "NSE_FO|57555",
  "NSE_FO|57554",
  "NSE_FO|57553",
  "NSE_FO|57552",
  "NSE_FO|57547",
  "NSE_FO|57546",
  "NSE_FO|57545",
  "NSE_FO|57540",
  "NSE_FO|57537",
  "NSE_FO|57534",
  "NSE_FO|57539",
  "NSE_FO|57538",
  "NSE_FO|57504",
  "NSE_FO|57503",
  "NSE_FO|57502",
  "NSE_FO|57507",
  "NSE_FO|57506",
  "NSE_FO|57505",
  "NSE_FO|57562",
  "NSE_FO|57561",
  "NSE_FO|57560",
  "NSE_FO|57565",
  "NSE_FO|57564",
  "NSE_FO|57563",
  "NSE_FO|57559",
  "NSE_FO|57558",
  "NSE_FO|57557",
  "NSE_FO|57556",
  "NSE_FO|57427",
  "NSE_FO|57426",
  "NSE_FO|57425",
  "NSE_FO|57424",
  "NSE_FO|57492",
  "NSE_FO|57496",
  "NSE_FO|57495",
  "NSE_FO|57494",
  "NSE_FO|57493",
  "NSE_FO|57499",
  "NSE_FO|57498",
  "NSE_FO|57497",
  "NSE_FO|57480",
  "NSE_FO|57485",
  "NSE_FO|57489",
  "NSE_FO|57488",
  "NSE_FO|57487",
  "NSE_FO|57486",
  "NSE_FO|57479",
  "NSE_FO|57451",
  "NSE_FO|57450",
  "NSE_FO|57447",
  "NSE_FO|57446",
  "NSE_FO|57441",
  "NSE_FO|57440",
  "NSE_FO|57445",
  "NSE_FO|57444",
  "NSE_FO|57443",
  "NSE_FO|57442",
  "NSE_FO|57438",
  "NSE_FO|57439",
  "NSE_FO|57474",
  "NSE_FO|57473",
  "NSE_FO|57472",
  "NSE_FO|57478",
  "NSE_FO|57477",
  "NSE_FO|57476",
  "NSE_FO|57475",
  "NSE_FO|57469",
  "NSE_FO|57468",
  "NSE_FO|57463",
  "NSE_FO|57462",
  "NSE_FO|57467",
  "NSE_FO|57466",
  "NSE_FO|57375",
  "NSE_FO|57374",
  "NSE_FO|57377",
  "NSE_FO|57376",
  "NSE_FO|57364",
  "NSE_FO|57365",
  "NSE_FO|57359",
  "NSE_FO|57358",
  "NSE_FO|57393",
  "NSE_FO|57392",
  "NSE_FO|57385",
  "NSE_FO|57384",
  "NSE_FO|57351",
  "NSE_FO|57350",
  "NSE_FO|57357",
  "NSE_FO|57356",
  "NSE_FO|57343",
  "NSE_FO|57336",
  "NSE_FO|57243",
  "NSE_FO|57242",
  "NSE_FO|57241",
  "NSE_FO|57240",
  "NSE_FO|57245",
  "NSE_FO|57244",
  "NSE_FO|57237",
  "NSE_FO|57272",
  "NSE_FO|57271",
  "NSE_FO|57270",
  "NSE_FO|57279",
  "NSE_FO|57267",
  "NSE_FO|57210",
  "NSE_FO|57214",
  "NSE_FO|57211",
  "NSE_FO|57205",
  "NSE_FO|57204",
  "NSE_FO|57209",
  "NSE_FO|57208",
  "NSE_FO|57203",
  "NSE_FO|57202",
  "NSE_FO|57231",
  "NSE_FO|57230",
  "NSE_FO|57236",
  "NSE_FO|57235",
  "NSE_FO|57234",
  "NSE_FO|57229",
  "NSE_FO|57228",
  "NSE_FO|57221",
  "NSE_FO|57220",
  "NSE_FO|57218",
  "NSE_FO|57217",
  "NSE_FO|57216",
  "NSE_FO|57215",
  "NSE_FO|57219",
  "NSE_FO|57282",
  "NSE_FO|57281",
  "NSE_FO|57280", 
  "NSE_FO|57286",
  "NSE_FO|57285",
  "NSE_FO|120090",
  "NSE_FO|120103",
];

export function chunkArray(arr, size) {
  const result = [];
  for (let i = 0; i < arr.length; i += size) {
    result.push(arr.slice(i, i + size));
  }
  return result;
}

export const chunks = chunkArray(instrumentKeys, 300);

// Now `chunks` is an array of arrays, each with max 300 instrument keys
console.log(`Total chunks: ${chunks.length}`);
chunks.forEach((chunk, i) => {
  console.log(`Chunk ${i + 1} - Size: ${chunk.length}`);
});
